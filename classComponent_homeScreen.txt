import React, { Component, useState } from 'react'
import { Text, View, ScrollView, StyleSheet, TextInput, TouchableOpacity } from 'react-native'
import { connect } from 'react-redux'
import { addFolder } from './actions'
import uuid from 'react-native-uuid'


const blankFolder = {
    Name: '',
    Tasks: []
}

const mapStateToProps = (state) => ({
    folders: state.folderReducer.folders
})

// const mapDispatchToProps = {
//     dispatchAddFolder: (folder) => addFolder(folder)
// }

const mapDispatchToProps = (dispatch) => {
    return {
        dispatchAddFolder: (folder) => dispatch(addFolder(folder))
    }
}


class HomeScreen extends Component {

    // const [newFolder, setNewFolder] = useState({
    //     Name: '',
    //     Tasks: []
    // })

    state = blankFolder

    updateInput = (key, value) => {
        this.setState({
            ...this.state,
            [key]: value
        })
    }

    addFolder = () => {
        this.props.dispatchAddFolder(this.state)
        this.setState(blankFolder)
    }

    // const addFolderNow = () => {
    //     console.log("Adding Folder " + JSON.stringify(newFolder))
    //     mapDispatchToProps.dispatchAddFolder(newFolder)
    //     setNewFolder(blankFolder)
    // }

    render() {

        const { folders } = this.props
    
    
        return (
            <View style={styles.container}>
                <ScrollView>
                    {folders.map((folder) => (
                        <View style={styles.folder} key={uuid.v4()}>
                            <Text style={styles.folderText}>{folder.Name}</Text>
                        </View>
                    ))}
                </ScrollView>
                 
                    <TextInput
                        style={{margin: 20}}
                        //value={this.state.Name}
                        placeholder='Enter new folder name'
                        //onChangeText={(text) => setNewFolder({ Name: text, Tasks: [] })}
                        onChangeText = {text => this.updateInput('Name',text)}
                        />
                    <TouchableOpacity
                        style={{margin: 20}}
                        //onPress={()=>addFolderNow()}
                        //onPress = {() => dispatchAddFolder(newFolder)}
                        onPress = {this.addFolder}
                        >
                        <Text>Add Folder</Text>
                    </TouchableOpacity>
                
            </View>
        ) 
    }
}

// const homeScreen = (props) => {
    
//     return (
//         <View>
//             <ScrollView>
//                 {folders.map((folder) => (
//                     <View>
//                         <Text>{folder.Name}</Text>
//                     </View>
//                 ))}
//             </ScrollView>
//         </View>
//     ) 
// }

export default connect(mapStateToProps, mapDispatchToProps)(HomeScreen)

const styles = StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: '#fff',
      alignItems: 'center',
      justifyContent: 'center',
    },
    folder: {
      justifyContent: 'center',
      alignItems: 'center',
      height: 75,
      width: 200,
      borderWidth: 2,
      borderRadius: 5,
      backgroundColor: '#add8e6',
      margin: 20
    },
  
    folderText: {
      color: '#000',
      
    }
  });